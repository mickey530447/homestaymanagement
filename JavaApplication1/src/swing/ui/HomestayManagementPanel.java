/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package swing.ui;

import java.awt.Color;
import java.awt.Image;
import java.io.File;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JColorChooser;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import swing.dao.HomestayDao;
import swing.helpers.DataValidator;
import swing.helpers.ImageHelper;
import swing.helpers.MessageDialogHelper;
import swing.helpers.SharedData;
import swing.model.Homestay;
import swing.model.User;

/**
 *
 * @author Emi Tiramis
 */
public class HomestayManagementPanel extends javax.swing.JPanel {

    public User u = SharedData.u;
    List<Homestay> list;
    int i = 0;
    String id;
    private byte[] personalImage;

    /**
     * Creates new form HomestayManagementPanel
     */
    public HomestayManagementPanel() {
        initComponents();
        try {
            HomestayDao dao = new HomestayDao();
            list = dao.showOwnerHomestay();
            showDetail(0);
        } catch (Exception e) {
            e.printStackTrace();
            MessageDialogHelper.showErrorDialog(null, e.getMessage(), "Error");
        }
    }

    public void showDetail(int i) {
        try {
            txtDetailName.setText(list.get(i).getName());
            txtDetailAddress.setText(list.get(i).getAddress());
            txtDetailPrice.setText(list.get(i).getPrice() + " VND");
            txtDetailTelephone.setText(list.get(i).getTelephone());
            txtAreaDetailMenities.setText(list.get(i).getAmenities());
            if (list.get(i).getPicture() != null){
                Image img =ImageHelper.createImageFromByteArray(list.get(i).getPicture(), "jpg");
                lblImage1.setIcon(new ImageIcon(img));
                personalImage = list.get(i).getPicture();
            } else {
                personalImage = list.get(i).getPicture();
                ImageIcon icon = new ImageIcon(
                        getClass().getResource("/swing/ui/images/icons8_image_100px.png"));
                lblImage1.setIcon(icon);
            }
            id = list.get(i).getID();
        } catch (Exception ex) {
            ex.printStackTrace();
            MessageDialogHelper.showErrorDialog(null, ex.getMessage(), "Error");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        kGradientPanel1 = new keeptoo.KGradientPanel();
        chkStove = new javax.swing.JCheckBox();
        btnSave = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnClear = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        chkKitchen = new javax.swing.JCheckBox();
        chkWifi = new javax.swing.JCheckBox();
        chkParking = new javax.swing.JCheckBox();
        chkElevator = new javax.swing.JCheckBox();
        chkAC = new javax.swing.JCheckBox();
        chkSmoke = new javax.swing.JCheckBox();
        chkFirstAid = new javax.swing.JCheckBox();
        chkMicrowave = new javax.swing.JCheckBox();
        btnPicture = new keeptoo.KButton();
        jLabel7 = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtDetailName = new javax.swing.JTextField();
        txtDetailAddress = new javax.swing.JTextField();
        txtDetailPrice = new javax.swing.JTextField();
        txtDetailTelephone = new javax.swing.JTextField();
        btnPreDetail = new javax.swing.JButton();
        btnNextDetail = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaDetailMenities = new javax.swing.JTextArea();
        btnDelete = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnSaveChange = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        lblImage1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        lblImage = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        kGradientPanel1.setkEndColor(new java.awt.Color(63, 120, 208));
        kGradientPanel1.setkStartColor(new java.awt.Color(39, 56, 83));

        chkStove.setForeground(new java.awt.Color(255, 255, 255));
        chkStove.setText("Stove");
        chkStove.setOpaque(false);

        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/ui/images/icons8_save_20px.png"))); // NOI18N
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Manage your place");

        btnClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/ui/images/icons8_erase_20px.png"))); // NOI18N
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Name");

        txtName.setForeground(new java.awt.Color(255, 255, 255));
        txtName.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        txtName.setOpaque(false);

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Price");

        txtPrice.setForeground(new java.awt.Color(255, 255, 255));
        txtPrice.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        txtPrice.setOpaque(false);

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Amenities:");

        chkKitchen.setForeground(new java.awt.Color(255, 255, 255));
        chkKitchen.setText("Kitchen");
        chkKitchen.setOpaque(false);

        chkWifi.setForeground(new java.awt.Color(255, 255, 255));
        chkWifi.setText("Wifi");
        chkWifi.setOpaque(false);

        chkParking.setForeground(new java.awt.Color(255, 255, 255));
        chkParking.setText("Free parking");
        chkParking.setOpaque(false);
        chkParking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkParkingActionPerformed(evt);
            }
        });

        chkElevator.setForeground(new java.awt.Color(255, 255, 255));
        chkElevator.setText("Elevator");
        chkElevator.setOpaque(false);

        chkAC.setForeground(new java.awt.Color(255, 255, 255));
        chkAC.setText("Air conditioner");
        chkAC.setOpaque(false);
        chkAC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkACActionPerformed(evt);
            }
        });

        chkSmoke.setForeground(new java.awt.Color(255, 255, 255));
        chkSmoke.setText("Smoke alarm");
        chkSmoke.setOpaque(false);

        chkFirstAid.setForeground(new java.awt.Color(255, 255, 255));
        chkFirstAid.setText("First aid kit");
        chkFirstAid.setOpaque(false);

        chkMicrowave.setForeground(new java.awt.Color(255, 255, 255));
        chkMicrowave.setText("Microwave");
        chkMicrowave.setOpaque(false);
        chkMicrowave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkMicrowaveActionPerformed(evt);
            }
        });

        btnPicture.setText("Choose picture");
        btnPicture.setkEndColor(new java.awt.Color(63, 120, 208));
        btnPicture.setkHoverEndColor(new java.awt.Color(255, 255, 255));
        btnPicture.setkHoverForeGround(new java.awt.Color(0, 0, 0));
        btnPicture.setkHoverStartColor(new java.awt.Color(255, 255, 255));
        btnPicture.setkStartColor(new java.awt.Color(111, 122, 140));
        btnPicture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPictureActionPerformed(evt);
            }
        });

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Address");

        txtAddress.setForeground(new java.awt.Color(255, 255, 255));
        txtAddress.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        txtAddress.setOpaque(false);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setText("Name: ");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 14, -1, -1));

        jLabel9.setText("Address:");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 45, -1, -1));

        jLabel10.setText("Price:");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 76, -1, -1));

        jLabel11.setText("Telephone:");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 107, -1, -1));

        jLabel12.setText("Amenities:");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 138, -1, -1));

        txtDetailName.setEditable(false);
        jPanel1.add(txtDetailName, new org.netbeans.lib.awtextra.AbsoluteConstraints(81, 11, 216, -1));

        txtDetailAddress.setEditable(false);
        jPanel1.add(txtDetailAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(81, 42, 216, -1));

        txtDetailPrice.setEditable(false);
        jPanel1.add(txtDetailPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(81, 73, 216, -1));

        txtDetailTelephone.setEditable(false);
        jPanel1.add(txtDetailTelephone, new org.netbeans.lib.awtextra.AbsoluteConstraints(82, 104, 215, -1));

        btnPreDetail.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/ui/images/icons8_chevron_left_20px.png"))); // NOI18N
        btnPreDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreDetailActionPerformed(evt);
            }
        });
        jPanel1.add(btnPreDetail, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, -1, -1));

        btnNextDetail.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/ui/images/icons8_chevron_right_20px.png"))); // NOI18N
        btnNextDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextDetailActionPerformed(evt);
            }
        });
        jPanel1.add(btnNextDetail, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 200, -1, -1));

        txtAreaDetailMenities.setEditable(false);
        txtAreaDetailMenities.setColumns(20);
        txtAreaDetailMenities.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        txtAreaDetailMenities.setRows(5);
        txtAreaDetailMenities.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 0, 0, new java.awt.Color(0, 0, 0)));
        jScrollPane1.setViewportView(txtAreaDetailMenities);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 140, 220, 50));

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/ui/images/icons8_delete_20px.png"))); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        jPanel1.add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 200, -1, -1));

        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/ui/images/icons8_edit_20px_1.png"))); // NOI18N
        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });
        jPanel1.add(btnEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 200, -1, -1));

        btnSaveChange.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/ui/images/icons8_save_20px.png"))); // NOI18N
        btnSaveChange.setText("Save change");
        btnSaveChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveChangeActionPerformed(evt);
            }
        });
        jPanel1.add(btnSaveChange, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 200, -1, -1));

        btnRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/ui/images/icons8_refresh_20px_1.png"))); // NOI18N
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        jPanel1.add(btnRefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, -1));

        lblImage1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblImage1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/ui/images/icons8_image_100px_1.png"))); // NOI18N
        jPanel1.add(lblImage1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 30, 190, 140));

        jPanel2.setOpaque(false);
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setOpaque(false);
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/ui/images/icons8_image_100px.png"))); // NOI18N
        jPanel3.add(lblImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 190, 140));

        jPanel2.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        javax.swing.GroupLayout kGradientPanel1Layout = new javax.swing.GroupLayout(kGradientPanel1);
        kGradientPanel1.setLayout(kGradientPanel1Layout);
        kGradientPanel1Layout.setHorizontalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(14, 14, 14)
                                .addComponent(chkKitchen)
                                .addGap(16, 16, 16)
                                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                        .addGap(104, 104, 104)
                                        .addComponent(chkStove))
                                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                        .addComponent(chkWifi)
                                        .addGap(61, 61, 61)
                                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(chkSmoke)
                                            .addComponent(chkParking))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                    .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel4))
                                    .addGap(37, 37, 37)
                                    .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtPrice)
                                        .addComponent(txtName)))
                                .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel7)
                                    .addGap(25, 25, 25)
                                    .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                .addGap(64, 64, 64)
                                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(chkFirstAid)
                                            .addComponent(chkElevator))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(chkAC)
                                            .addComponent(chkMicrowave)))
                                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                        .addComponent(btnClear)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnSave)
                                        .addGap(155, 155, 155)
                                        .addComponent(btnPicture, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(14, 14, 14))))))
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 525, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        kGradientPanel1Layout.setVerticalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(chkKitchen)
                            .addComponent(chkWifi)
                            .addComponent(chkParking))
                        .addGap(44, 44, 44)
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(chkSmoke)
                            .addComponent(chkAC)
                            .addComponent(chkElevator))
                        .addGap(41, 41, 41)
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(chkFirstAid)
                            .addComponent(chkMicrowave)
                            .addComponent(chkStove)))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnClear)
                    .addComponent(btnPicture, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE)
                .addContainerGap())
        );

        add(kGradientPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 610, 682));
    }// </editor-fold>//GEN-END:initComponents

    private void chkACActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkACActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkACActionPerformed

    private void chkMicrowaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkMicrowaveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkMicrowaveActionPerformed

    private void chkParkingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkParkingActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkParkingActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        StringBuilder sb = new StringBuilder();
        DataValidator.validateEmpty(txtName, sb, "Missing name");
        DataValidator.validateEmpty(txtPrice, sb, "Missing price");
        DataValidator.validateEmpty(txtAddress, sb, "Missing address");
        if (sb.length() > 0) {
            MessageDialogHelper.showErrorDialog(null, sb.toString(), "Error");
            return;
        }
        if (MessageDialogHelper.showConfirmDialog(null, "Confirm?", "Are you sure?") == JOptionPane.NO_OPTION) {
            return;
        }
        StringBuilder ame = new StringBuilder();
        if (chkKitchen.isSelected()) {
            ame.append(chkKitchen.getText() + ", ");
        }
        if (chkWifi.isSelected()) {
            ame.append(chkWifi.getText() + ", ");
        }
        if (chkParking.isSelected()) {
            ame.append(chkParking.getText() + ", ");
        }
        if (chkElevator.isSelected()) {
            ame.append(chkElevator.getText() + ", ");
        }
        if (chkAC.isSelected()) {
            ame.append(chkAC.getText() + ", ");
        }
        if (chkSmoke.isSelected()) {
            ame.append(chkSmoke.getText() + ", ");
        }
        if (chkFirstAid.isSelected()) {
            ame.append(chkFirstAid.getText() + ", ");
        }
        if (chkMicrowave.isSelected()) {
            ame.append(chkMicrowave.getText() + ", ");
        }
        if (chkStove.isSelected()) {
            ame.append(chkStove.getText() + ", ");
        }
        try {
            Homestay home = new Homestay();
            home.setTelephone(u.getTelephone());
            home.setName(txtName.getText().toUpperCase());
            home.setAddress(txtAddress.getText().toUpperCase());
            home.setPrice(Double.parseDouble(txtPrice.getText()));
            home.setAmenities(ame.toString().substring(0, ame.toString().length() - 2));
            home.setPicture(personalImage);
            
            HomestayDao dao = new HomestayDao();
            if (dao.insertHomestay(home)) {
                MessageDialogHelper.showMessageDialog(null, "Saved", "Information");
            } else {
                MessageDialogHelper.showConfirmDialog(null, "Cannot saved", "Warning");
            }
        } catch (Exception e) {
            e.printStackTrace();
            MessageDialogHelper.showErrorDialog(null, e.getMessage(), "Error");

        } finally{
            clearTxt();
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        if (MessageDialogHelper.showConfirmDialog(null, "Confirm?", "Do you want to delete this place?") == JOptionPane.NO_OPTION) {
            return;
        }
        try {
            HomestayDao dao = new HomestayDao();
            dao.deleteHomestay(txtDetailName);
        } catch (Exception e) {
            e.printStackTrace();
            MessageDialogHelper.showErrorDialog(null, e.getMessage(), "Error");
        } finally {
            txtDetailAddress.setText("");
            txtAreaDetailMenities.setText("");
            txtDetailName.setText("");
            txtDetailPrice.setText("");
            txtDetailTelephone.setText("");
        }

    }//GEN-LAST:event_btnDeleteActionPerformed
    private void clearTxt() {
        txtName.setText("");
        txtPrice.setText("");
        txtAddress.setText("");
        chkKitchen.setSelected(false);
        chkWifi.setSelected(false);
        chkParking.setSelected(false);
        chkElevator.setSelected(false);
        chkAC.setSelected(false);
        chkSmoke.setSelected(false);
        chkFirstAid.setSelected(false);
        chkMicrowave.setSelected(false);
        chkStove.setSelected(false);
        personalImage = null;
        ImageIcon icon = new ImageIcon(getClass().getResource("/swing/ui/images/icons8_image_100px.png"));
        lblImage.setIcon(icon);
    }
    private void btnNextDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextDetailActionPerformed
        try {
            if (i < list.size() - 1) {
                i++;
                showDetail(i);
            }
        } catch (Exception ex) {
            ex.printStackTrace();
            MessageDialogHelper.showErrorDialog(null, ex.getMessage(), "Error");
        }

    }//GEN-LAST:event_btnNextDetailActionPerformed

    private void btnPreDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreDetailActionPerformed
        // TODO add your handling code here:
        try {
            if (i > 0) {
                i--;
                showDetail(i);
            }
        } catch (Exception ex) {
            ex.printStackTrace();
            MessageDialogHelper.showErrorDialog(null, ex.getMessage(), "Error");
        }
    }//GEN-LAST:event_btnPreDetailActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        txtDetailAddress.setEditable(true);
        txtDetailName.setEditable(true);
        txtDetailPrice.setEditable(true);
        txtAreaDetailMenities.setEditable(true);
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnSaveChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveChangeActionPerformed
        // TODO add your handling code here:
        StringBuilder sb = new StringBuilder();
        DataValidator.validateEmpty(txtDetailName, sb, "Missing name");
        DataValidator.validateEmpty(txtDetailPrice, sb, "Missing price");
        DataValidator.validateEmpty(txtDetailAddress, sb, "Missing address");
        if (sb.length() > 0) {
            MessageDialogHelper.showErrorDialog(null, sb.toString(), "Error");
            return;
        }
        try {
            Homestay home = new Homestay();
            home.setName(txtDetailName.getText().toUpperCase());
            home.setAddress(txtDetailAddress.getText().toUpperCase());
            home.setPrice(Double.parseDouble(txtDetailPrice.getText()));
            home.setAmenities(txtAreaDetailMenities.getText());
            home.setID(id);
            HomestayDao dao = new HomestayDao();
            if (dao.updateHomestay(home)) {
                MessageDialogHelper.showMessageDialog(null, "Saved", "Information");
            } else {
                MessageDialogHelper.showConfirmDialog(null, "Cannot saved", "Warning");
            }
        } catch (Exception e) {
            e.printStackTrace();
            MessageDialogHelper.showErrorDialog(null, e.getMessage(), "Error");

        } finally{
            txtDetailAddress.setEditable(false);
            txtDetailName.setEditable(false);
            txtDetailPrice.setEditable(false);
            txtAreaDetailMenities.setEditable(false);
        }
    }//GEN-LAST:event_btnSaveChangeActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        try {
            HomestayDao dao = new HomestayDao();
            list = dao.showOwnerHomestay();
            showDetail(0);
        } catch (Exception e) {
            e.printStackTrace();
            MessageDialogHelper.showErrorDialog(null, e.getMessage(), "Error");
        }
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnPictureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPictureActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.setFileFilter(new FileFilter() {
            @Override
            public boolean accept(File f) {
                if (f.isDirectory()){
                    return true;
                } else{
                    return f.getName().toLowerCase().endsWith(".jpg");
                }
            }
            @Override
            public String getDescription() {
                return "Image File (*.jpg)";
            }
        });
        if (chooser.showOpenDialog(null) == JFileChooser.CANCEL_OPTION){
            return;
        }
        File file = chooser.getSelectedFile();
        try {
            ImageIcon icon = new ImageIcon(file.getPath());
            Image img = ImageHelper.resize(icon.getImage(), 220, 180);
            ImageIcon resizedIcon = new ImageIcon(img);
            lblImage.setIcon(resizedIcon);
            personalImage = ImageHelper.toByteArray(img, "jpg");
        } catch (Exception e) {
            e.printStackTrace();
            MessageDialogHelper.showMessageDialog(null, e.getMessage(), "Error");
        }
    }//GEN-LAST:event_btnPictureActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        clearTxt();
    }//GEN-LAST:event_btnClearActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnNextDetail;
    private keeptoo.KButton btnPicture;
    private javax.swing.JButton btnPreDetail;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSaveChange;
    private javax.swing.JCheckBox chkAC;
    private javax.swing.JCheckBox chkElevator;
    private javax.swing.JCheckBox chkFirstAid;
    private javax.swing.JCheckBox chkKitchen;
    private javax.swing.JCheckBox chkMicrowave;
    private javax.swing.JCheckBox chkParking;
    private javax.swing.JCheckBox chkSmoke;
    private javax.swing.JCheckBox chkStove;
    private javax.swing.JCheckBox chkWifi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private keeptoo.KGradientPanel kGradientPanel1;
    private javax.swing.JLabel lblImage;
    private javax.swing.JLabel lblImage1;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextArea txtAreaDetailMenities;
    private javax.swing.JTextField txtDetailAddress;
    private javax.swing.JTextField txtDetailName;
    private javax.swing.JTextField txtDetailPrice;
    private javax.swing.JTextField txtDetailTelephone;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPrice;
    // End of variables declaration//GEN-END:variables
}
